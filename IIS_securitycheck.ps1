# Define the path to the Desktop
$outputDir = [System.IO.Path]::Combine([System.Environment]::GetFolderPath('Desktop'), "IIS_Security_Report")
if (-not (Test-Path $outputDir)) {
    New-Item -Path $outputDir -ItemType Directory
}

# HTML Header with improved styling
$htmlContent = @"
<html>
<head>
    <title>IIS Security Configuration Report</title>
    <style>
        body { font-family: Calibri, sans-serif; margin: 20px; background-color: #f4f4f9; color: #333; }
        h1 { color: #333; text-align: center; font-size: 28px; border-bottom: 2px solid #ddd; padding-bottom: 10px; }
        h2 { color: #0056b3; font-size: 24px; border-bottom: 1px solid #ddd; padding-bottom: 5px; margin-top: 30px; }
        table { width: 100%; border-collapse: collapse; margin-bottom: 30px; }
        th, td { border: 1px solid #ddd; padding: 12px 8px; text-align: left; }
        th { background-color: #0056b3; color: #fff; font-size: 18px; }
        tr:nth-child(even) { background-color: #f9f9f9; }
        tr:hover { background-color: #f1f1f1; }
        .section-title { margin-top: 50px; font-size: 26px; color: #444; }
        footer { text-align: center; font-size: 14px; color: #666; margin-top: 40px; }
    </style>
</head>
<body>
    <h1>IIS Security Configuration Report</h1>
"@

# Function to add section to HTML
function Add-SectionToHtml {
    param ($title, $content)

    $htmlContent += "<h2>$title</h2>"
    $htmlContent += "<table><tr><th>Setting</th><th>Value</th></tr>"

    foreach ($item in $content) {
        foreach ($property in $item.PSObject.Properties) {
            $htmlContent += "<tr><td>$($property.Name)</td><td>$($property.Value)</td></tr>"
        }
    }

    $htmlContent += "</table>"
}

# Collecting various security configurations

# General Security Settings
$generalSecurity = Get-WebConfiguration -Filter "/system.webServer/security/*" -Recurse
Add-SectionToHtml "General Security Settings" $generalSecurity

# Authentication Settings
$authenticationConfig = Get-WebConfiguration -Filter "/system.webServer/security/authentication/*" -Recurse
Add-SectionToHtml "Authentication Settings" $authenticationConfig

# Authorization Settings
$authorizationConfig = Get-WebConfiguration -Filter "/system.webServer/security/authorization/*" -Recurse
Add-SectionToHtml "Authorization Settings" $authorizationConfig

# IP Restrictions
$ipRestrictionsConfig = Get-WebConfiguration -Filter "/system.webServer/security/ipSecurity/*" -Recurse
Add-SectionToHtml "IP Restrictions" $ipRestrictionsConfig

# SSL Settings
$sslConfig = Get-WebConfiguration -Filter "/system.webServer/security/access/*" -Recurse
Add-SectionToHtml "SSL Settings" $sslConfig

# SSL Bindings
$sslBindings = Get-WebBinding | Where-Object { $_.protocol -eq "https" }
Add-SectionToHtml "SSL Bindings" $sslBindings

# SSL Certificates
$sslCertificates = Get-ChildItem -Path Cert:\LocalMachine\My
Add-SectionToHtml "SSL Certificates" $sslCertificates

# Logging Settings
$loggingConfig = Get-WebConfigurationProperty -Filter "system.applicationHost/sites/siteDefaults/logFile" -Name *
Add-SectionToHtml "Logging Settings" $loggingConfig

# Request Filtering Settings
$requestFilteringConfig = Get-WebConfiguration -Filter "/system.webServer/security/requestFiltering/*" -Recurse
Add-SectionToHtml "Request Filtering Settings" $requestFilteringConfig

# User and Permission Settings (example)
$users = Get-IISSite -Name "Default Web Site" | Get-IISAppPool | Get-WmiObject Win32_UserAccount
Add-SectionToHtml "Authorized Users and Permissions" $users

# HTML Footer
$htmlContent += "<footer>Generated by PowerShell Script on $(Get-Date)</footer>"
$htmlContent += "</body></html>"

# Save HTML to Desktop
$htmlFilePath = [System.IO.Path]::Combine($outputDir, "IIS_Security_Report.html")
$htmlContent | Out-File -FilePath $htmlFilePath -Encoding UTF8

Write-Host "IIS Security configuration report has been generated at: $htmlFilePath"
